name: Build Rust node and tools

on:
  push:
    branches:
      - 'tonos-se-v-*'

jobs:
  build:

    runs-on: ubuntu-18.04
    env:
      Q_SERVER_GITHUB_REPO: https://github.com/tonlabs/ton-q-server
      Q_SERVER_GITHUB_REV: master

    steps:
    - uses: actions/checkout@v2
    - name: Clone GraphQL
      run: |
        git clone --recursive --branch $Q_SERVER_GITHUB_REV $Q_SERVER_GITHUB_REPO ton-q-server

    - name: Package GraphQL npm 
      shell: bash
      run: echo "##[set-output name=release_tar;]$(npm pack ./ton-q-server | tail -1)"
      id: graphql_release

    - name: Build TON node 
      run: |
        sudo apt update -y && sudo apt install -y cmake pkg-config libssl-dev curl
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh 
        cd ton-node-se && cargo build --release

    - name: Archive GraphQL npm and TON node bin to common release
      run: |
        tar --transform 's/.*\///g' -cvzf tonos-se.tar.gz ton-node-se/target/release/ton_node_startup ${{ steps.graphql_release.outputs.release_tar }}

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_branch.outputs.branch }}
        release_name: ${{ steps.extract_branch.outputs.branch }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tonos-se.tar.gz
        asset_name: ${{ steps.extract_branch.outputs.branch }}.tgz
        asset_content_type: application/gzip
