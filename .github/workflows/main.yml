name: Build Rust node and tools

on:
  push:
    branches:
      - 'tonos-se-v-*'

jobs:
  build_linux:

    runs-on: ubuntu-18.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    env:
      TONSECTL_VERSION: v0.0.1
      Q_SERVER_GITHUB_REPO: https://github.com/tonlabs/ton-q-server
      Q_SERVER_GITHUB_REV: master

    steps:
    - uses: actions/checkout@v2

    - name: Build tonsectl
      run: |
        wget -q https://golang.org/dl/go1.16.2.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz
        export PATH=$PATH:/usr/local/go/bin
        cd tonsectl 
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X github.com/INTONNATION/tonos-se-installers/tonsectl/cmd/version.appVersion=${TONSECTL_VERSION}" -o "./artifacts/tonsectl_linux" main.go
        GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X github.com/INTONNATION/tonos-se-installers/tonsectl/cmd/version.appVersion=${TONSECTL_VERSION}" -o "./artifacts/tonsectl_darwin" main.go
        GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X github.com/INTONNATION/tonos-se-installers/tonsectl/cmd/version.appVersion=${TONSECTL_VERSION}" -o "./artifacts/tonsectl_windows.exe" main.go

    - name: Clone GraphQL
      run: |
        git clone --recursive --branch $Q_SERVER_GITHUB_REV $Q_SERVER_GITHUB_REPO ton-q-server
        cp tonsectl/graphql/.env ton-q-server/

    - name: Package GraphQL npm 
      shell: bash
      run: echo "##[set-output name=release_tar;]$(npm pack ./ton-q-server | tail -1)"
      id: graphql_release

    - name: Build TON node 
      run: |
        sudo apt update -y && sudo apt install -y cmake pkg-config libssl-dev curl
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        cd ton-node-se && cargo build --release

    - name: Archive GraphQL npm and TON node bin to common release
      run: |
        tar --transform 's/.*\///g' -cvzf tonos-se-linux.tar.gz ./ton-node-se/target/release/ton_node_startup ${{ steps.graphql_release.outputs.release_tar }}

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_branch.outputs.branch }}
        release_name: ${{ steps.extract_branch.outputs.branch }}
        draft: false
        prerelease: false

    - name: Upload Release | node archive
      id: upload-release-asset-node
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tonos-se-linux.tar.gz
        asset_name: ${{ steps.extract_branch.outputs.branch }}-linux.tgz
        asset_content_type: application/gzip

    - name: Upload Release Asset | tonsectl bin linux
      id: upload-release-asset-tonsectl-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tonsectl/artifacts/tonsectl_linux
        asset_name: tonsectl_linux
        asset_content_type: application/x-executable

    - name: Upload Release Asset | tonsectl bin mac
      id: upload-release-asset-tonsectl-mac
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tonsectl/artifacts/tonsectl_darwin
        asset_name: tonsectl_darwin
        asset_content_type: application/x-executable

  build_mac:

    runs-on: macos-10.15
    needs: build_linux
    env:
      Q_SERVER_GITHUB_REPO: https://github.com/tonlabs/ton-q-server
      Q_SERVER_GITHUB_REV: master

    steps:
    - uses: actions/checkout@v2

    - name: Clone GraphQL
      run: |
        git clone --recursive --branch $Q_SERVER_GITHUB_REV $Q_SERVER_GITHUB_REPO ton-q-server
        cp tonsectl/graphql/.env ton-q-server/

    - name: Package GraphQL npm 
      shell: bash
      run: echo "##[set-output name=release_tar;]$(npm pack ./ton-q-server | tail -1)"
      id: graphql_release

    - name: Build TON node 
      run: |
        brew install cmake pkg-config curl
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        cd ton-node-se && cargo build --release --target x86_64-apple-darwin

    - name: Archive GraphQL npm and TON node bin to common release
      run: |
        cp ./ton-node-se/target/x86_64-apple-darwin/release/ton_node_startup ./ton_node_startup
        tar -cf tonos-se-darwin.tar ./ton_node_startup ${{ steps.graphql_release.outputs.release_tar }}

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Upload Release Asset | node archive
      id: upload-release-asset-node
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_linux.outputs.upload_url }}
        asset_path: tonos-se-darwin.tar
        asset_name: ${{ steps.extract_branch.outputs.branch }}-darwin.tar
        asset_content_type: application/x-tar

  build_win:

    runs-on: windows-2019
    needs: build_linux

    steps:
    - uses: actions/checkout@v2

    - name: Clone GraphQL
      run: |
        git clone --recursive --branch master https://github.com/tonlabs/ton-q-server ton-q-server
        cp tonsectl/graphql/.env ton-q-server/

    - name: Package GraphQL npm 
      shell: bash
      run: echo "##[set-output name=release_tar;]$(npm pack ./ton-q-server | tail -1)"
      id: graphql_release

    - name: Checkout tonlabs/tonos-se 
      uses: actions/checkout@v2
      with:
        repository: 'tonlabs/tonos-se'
        ref: 'master'
        
    - name: Install toolchain 
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        
    - name: Build ton-node-se 
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --manifest-path ton-node-se/Cargo.toml

    - name: Archive GraphQL npm and TON node bin to common release
      run: |
        cp ./ton-node-se/target/release/ton_node_startup ./ton_node_startup
        tar -cf tonos-se-windows.tar ./ton_node_startup ${{ steps.graphql_release.outputs.release_tar }}

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Upload Release Asset | node archive
      id: upload-release-asset-node
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.build_linux.outputs.upload_url }}
        asset_path: tonos-se-windows.tar
        asset_name: ${{ steps.extract_branch.outputs.branch }}-windows.tar
        asset_content_type: application/x-tar